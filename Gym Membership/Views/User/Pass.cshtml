@model Gym_Membership.Models.GymMember

@{
    ViewBag.Title = "Pass";
    var prices = ViewBag.Prices as List<Gym_Membership.Models.Membership>;
    var oneDayPrice = prices.Where(x => x.MembershipCode== "1DAY").ToList().FirstOrDefault().Fee;
    var tenDayPrice = prices.Where(x => x.MembershipCode == "10VS").ToList().FirstOrDefault().Fee;
}

<h2>Pass</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Pass</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
            @*    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })*@
                <select class="form-control" name="Title"  >
                    <option value=""></option>
                    <option value="Ms">Ms</option>
                    <option value="Mrs">Mrs</option>
                    <option value="Mr">Mr</option>
                    <option value="Dr">Dr</option>
                </select>
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                <select class="form-control" name="Gender" >
                    <option value=""></option>
                    <option value="F">Female</option>
                    <option value="M">Male</option>
                </select>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control pickadate" } })*@
                <input type="text" class="form-control pickadate" name="DateOfBirth" />
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgeInputted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.AgeInputted, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" name="AgeInputted" class="form-control" placeholder="option, if there is not Date of Birth"/>
                @Html.ValidationMessageFor(model => model.AgeInputted, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" name="StreetAddress" />
                @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control typeahead-town" } })*@
                <input type="text" class="form-control typeahead-town" name="Town" />
                @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Club, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.Club, new { htmlAttributes = new { @class = "form-control" } })*@
                <select class="form-control" name="Club">
                    <option value="BB" selected>Space Gym Beau Bassin</option>
                    <option value="CP">Space Gym Curepipe</option>
                    <option value="RH">Executive Rose Hill</option>
                </select>
                @Html.ValidationMessageFor(model => model.Club, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxVisits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.VisitsAllowed, new { htmlAttributes = new { @class = "form-control" } })*@
                <select class="form-control" name="MaxVisits" required>
                    <option value="" selected>Select</option>
                    <option value="1">One-Day Pass @@Rs @oneDayPrice</option>
                    <option value="10">Ten Visits Pass @@Rs @tenDayPrice</option>
                </select>
                @Html.ValidationMessageFor(model => model.MaxVisits, "", new { @class = "text-danger" })
            </div>
        </div>

    
    

      

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
              @*  @Html.EditorFor(model => model.PaymentMethod, new { htmlAttributes = new { @class = "form-control" } })*@
                <select class="form-control" name="PaymentMethod" required>
                    <option value="" selected>Select</option>
                    <option value="Cash">Cash</option>
                    <option value="Cheque">Cheque</option>
                    <option value="Debit Card">Debit Card</option>
                    <option value="Credit Card">Credit Card</option>
                   
                </select>
                @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Comments,  new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {



        });

    </script>
}
